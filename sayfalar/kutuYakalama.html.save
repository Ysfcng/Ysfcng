<html>
<head><meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
<style>
*{
padding:0;
margin:0;
box-sizing:border-box
}
.up{
width:100%;
height:20px;
background:red
}
.ball{
width:30px;
height:30px;
background:white;
border-radius:50%;
box-shadow:0 3px 30px rgba(0,0,0,0.5);
position:absolute
}
.container{
width:50px;
height:50px;
background:brown;
display:flex;
align-items:center;
justify-content:center;
position:absolute;
top:400px
}
</style>
</head>
<body>
<template>
<div class="ball"></div>
</template>
<div class="up"></div>


<div class="container"><span>box</span></div>

<script>
let template=document.querySelector("template")
let up=document.querySelector(".up")
function createBall(){


let ball=template.content.cloneNode(true)
up.appendChild(ball)

}

function destroyBall(){}

createBall()
</script>
</body>
<html>
Bir elementi yatay olarak sürüklenebilir (draggable) hale getirmek için JavaScript ve CSS kullanabilirsin. İşte birkaç farklı yöntem:


---

1. Pure JavaScript ile Draggable Özelliği

Bu yöntemde mousedown, mousemove ve mouseup olaylarını kullanarak bir elementi sürüklenebilir hale getirebiliriz.

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Draggable Element</title>
    <style>
        #draggable {
            width: 150px;
            height: 100px;
            background-color: lightblue;
            position: absolute;
            cursor: grab;
            top: 50px;
            left: 50px;
        }
    </style>
</head>
<body>

<div id="draggable">Sürükle</div>

<script>
    const draggable = document.getElementById("draggable");

    let isDragging = false;
    let startX, startLeft;

    draggable.addEventListener("mousedown", (e) => {
        isDragging = true;
        startX = e.clientX;
        startLeft = draggable.offsetLeft;
        draggable.style.cursor = "grabbing";
    });

    document.addEventListener("mousemove", (e) => {
        if (!isDragging) return;
        let deltaX = e.clientX - startX;
        draggable.style.left = startLeft + deltaX + "px";
    });

    document.addEventListener("mouseup", () => {
        isDragging = false;
        draggable.style.cursor = "grab";
    });
</script>

</body>
</html>


---

2. CSS ve JavaScript ile Scroll Tabanlı Yatay Sürükleme

Eğer bir listeyi veya içerik alanını yatay olarak sürüklemek istiyorsan, CSS overflow: auto ve JavaScript scrollLeft kullanabilirsin.

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Yatay Sürükleme</title>
    <style>
        .scroll-container {
            width: 400px;
            overflow: auto;
            white-space: nowrap;
            border: 2px solid black;
            cursor: grab;
            user-select: none;
        }

        .item {
            display: inline-block;
            width: 100px;
            height: 100px;
            background-color: tomato;
            margin: 5px;
        }
    </style>
</head>
<body>

<div class="scroll-container">
    <div class="item"></div>
    <div class="item"></div>
    <div class="item"></div>
    <div class="item"></div>
    <div class="item"></div>
    <div class="item"></div>
</div>

<script>
    const container = document.querySelector(".scroll-container");

    let isDown = false;
    let startX, scrollLeft;

    container.addEventListener("mousedown", (e) => {
        isDown = true;
        startX = e.pageX - container.offsetLeft;
        scrollLeft = container.scrollLeft;
        container.style.cursor = "grabbing";
    });

    container.addEventListener("mouseleave", () => {
        isDown = false;
        container.style.cursor = "grab";
    });

    container.addEventListener("mouseup", () => {
        isDown = false;
        container.style.cursor = "grab";
    });

    container.addEventListener("mousemove", (e) => {
        if (!isDown) return;
        e.preventDefault();
        const x = e.pageX - container.offsetLeft;
        const walk = (x - startX) * 2; // Hızlandırma faktörü
        container.scrollLeft = scrollLeft - walk;
    });
</script>

</body>
</html>



https://cdnjs.cloudflare.com/ajax/libs/
Draggable/1.0.0/draggable.bundle.min.js


